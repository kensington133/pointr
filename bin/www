#!/usr/bin/env node
var debug = require('debug')('pointr');
var app = require('../app');

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

var io = require('socket.io').listen(server);

var userNames = {};
var totalUsers = 0,
	highScore = '00:00';

io.sockets.on('connection', function (socket) {
	var userAdded = false;

	//check for new user count every second
	setInterval( function(){
		socket.emit('total-users', totalUsers);
	}, 1000);


	socket.on('add-user', function(username){

		//if username exits - add 2 random chars to end (numbers or letters)
		if(username in userNames){
			username = username + Math.random().toString(36).substr(2, 2);
		} else {
			username = username;
		}

		//store username in socket session
		socket.username = username;
		userNames[username] = username;
		totalUsers++;
		userAdded = true;

		//once added tell all users about it
		socket.broadcast.emit('new-user', {
			username: socket.username,
			totalUsers: totalUsers
		});

		console.log('Total Users: '+totalUsers)
		console.log('Users: ', userNames);
	});

	socket.on('new-message', function(data){
		socket.broadcast.emit('new-message', {
			username: socket.username,
			message: data
		});
	});

	socket.on('add-message', function(messageData){
		socket.broadcast.emit('new-message', {
			username: socket.username,
			message: messageData
		});
	});

	socket.on('score-submit', function(score){
		//test if score time is longer than highscore
		if(Date.parse('01/01/1970 00:'+score) > Date.parse('01/01/1970 00:'+highScore)){

			highScore = score;
			io.sockets.emit('new-high-score', {
				username: socket.username,
				score: highScore
			});

			console.log('New High Score! '+highScore);
		} else {
			highScore = highScore;
		}
	});

	//when a user disconects - tell users
	socket.on('disconnect', function () {
		if (userAdded) {
			delete userNames[socket.username];
			totalUsers--;

			socket.broadcast.emit('user-left', {
				username: socket.username,
				numUsers: totalUsers
			});
		}
		console.log('Total Users: '+totalUsers)
		console.log('Users: ', userNames);
	});
});
